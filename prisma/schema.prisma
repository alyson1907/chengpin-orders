generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id        String      @id @default(auto()) @map("_id") @db.ObjectId
  username  String      @unique
  password  String
  createdAt DateTime    @default(now())
  updatedAt DateTime?   @updatedAt
  userRoles UserRoles[]
}

model UserRoles {
  id        String    @id @default(auto()) @map("_id") @db.ObjectId
  userId    String    @db.ObjectId
  roleId    String    @db.ObjectId
  user      User      @relation(fields: [userId], references: [id])
  role      Role      @relation(fields: [roleId], references: [id])
  createdAt DateTime  @default(now())
  updatedAt DateTime? @updatedAt

  @@unique([userId, roleId])
}

model Role {
  id        String      @id @default(auto()) @map("_id") @db.ObjectId
  role      String      @unique
  createdAt DateTime    @default(now())
  updatedAt DateTime?   @updatedAt
  userRoles UserRoles[]
}

model Category {
  id              String            @id @default(auto()) @map("_id") @db.ObjectId
  name            String            @unique
  visible         Boolean           @default(true)
  createdAt       DateTime          @default(now())
  updatedAt       DateTime?         @updatedAt
  categoryProduct CategoryProduct[]
}

model Product {
  id              String                @id @default(auto()) @map("_id") @db.ObjectId
  name            String                @unique
  description     String?
  coverImg        String
  imgs            String[]
  availability    ProductAvailability[]
  categoryProduct CategoryProduct[]
  createdAt       DateTime              @default(now())
  updatedAt       DateTime?             @updatedAt
}

model CategoryProduct {
  id         String    @id @default(auto()) @map("_id") @db.ObjectId
  productId  String    @db.ObjectId
  categoryId String    @db.ObjectId
  product    Product   @relation(fields: [productId], references: [id])
  category   Category  @relation(fields: [categoryId], references: [id])
  createdAt  DateTime  @default(now())
  updatedAt  DateTime? @updatedAt

  @@unique([productId, categoryId])
}

model ProductAvailability {
  id        String    @id @default(auto()) @map("_id") @db.ObjectId
  name      String
  productId String?   @db.ObjectId
  price     Float
  qty       Float
  product   Product?  @relation(fields: [productId], references: [id])
  createdAt DateTime  @default(now())
  updatedAt DateTime? @updatedAt

  @@unique([productId, name])
}
